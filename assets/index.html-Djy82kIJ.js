import{_ as s,c as a,a as e,o as t}from"./app-DClWqeTu.js";const o="/learning-poo/assets/path1-Bp2Ffmd1.jpg",l="/learning-poo/assets/path2-Gs3VtCj7.jpg",i="/learning-poo/assets/compilation-Ba6JLOfb.png",p="/learning-poo/assets/jvm-DjHnt5QK.png",r="/learning-poo/assets/package-jdxXQ7AU.png",c={};function u(d,n){return t(),a("div",null,n[0]||(n[0]=[e('<h1 id="fondamentaux-java" tabindex="-1"><a class="header-anchor" href="#fondamentaux-java"><span>Fondamentaux JAVA</span></a></h1><h2 id="historique" tabindex="-1"><a class="header-anchor" href="#historique"><span>Historique</span></a></h2><p><strong>1995 : Java 1.0</strong></p><ul><li><strong>SDK</strong> : Introduction du Java Development Kit (JDK) 1.0.</li><li><strong>Écosystème</strong> : Lancement de Java par Sun Microsystems, conçu pour être portable, sécurisé et multithread.</li></ul><p><strong>1997 : Java 1.1</strong></p><ul><li><strong>API</strong> : Introduction de l&#39;API JDBC pour l&#39;accès aux bases de données et de l&#39;API RMI pour la communication entre objets distants.</li></ul><p><strong>1998 : Java 2 (JDK 1.2)</strong></p><ul><li><strong>SDK</strong> : Renommé en Java 2 Platform, Standard Edition (J2SE).</li><li><strong>API</strong> : Introduction des Collections Framework.</li><li><strong>Écosystème</strong> : Expansion de Java avec les éditions Enterprise (J2EE) et Micro (J2ME).</li></ul><p><strong>2004 : Java 5 (JDK 1.5)</strong></p><ul><li><strong>SDK</strong> : Introduction des Generics, des Enums, et des annotations.</li><li><strong>API</strong> : Ajout de l&#39;API java.util.concurrent pour la programmation concurrente.</li></ul><p><strong>2006 : Java 6 (JDK 1.6)</strong></p><ul><li><strong>Écosystème</strong> : Java devient open source sous la licence GPL.</li></ul><p><strong>2011 : Java 7 (JDK 1.7)</strong></p><ul><li><strong>SDK</strong> : Introduction du Project Coin avec des améliorations syntaxiques.</li><li><strong>API</strong> : Ajout de l&#39;API NIO.2 pour une meilleure gestion des fichiers.</li></ul><p><strong>2014 : Java 8 (JDK 1.8)</strong></p><ul><li><strong>SDK</strong> : Introduction des expressions lambda et des Streams.</li><li><strong>API</strong> : Ajout de l&#39;API java.time pour la gestion des dates et heures.</li><li><strong>Écosystème</strong> : Java 8 devient une version très populaire grâce à ses améliorations majeures.</li></ul><p><strong>2017 : Java 9 (JDK 9)</strong></p><ul><li><strong>SDK</strong> : Introduction du système de modules (Project Jigsaw).</li></ul><p><strong>2018 : Java 11 (JDK 11)</strong></p><ul><li><strong>SDK</strong> : Java devient un logiciel LTS (Long-Term Support).</li><li><strong>API</strong> : Ajout de l&#39;API HTTP Client.</li><li><strong>Écosystème</strong> : Adoption de Java 11 comme version LTS par de nombreuses entreprises.</li></ul><p><strong>2021 : Java 17 (JDK 17)</strong></p><ul><li><strong>SDK</strong> : Version LTS avec de nombreuses améliorations de performance.</li><li><strong>API</strong> : Ajout de l&#39;API Foreign Function &amp; Memory (en preview).</li><li><strong>Écosystème</strong> : Adoption massive de Java 17 comme version LTS.</li></ul><p><strong>2023 : Java 21 (JDK 21)</strong></p><ul><li><strong>SDK</strong> : Version LTS avec de nombreuses améliorations de performance.</li><li><strong>API</strong> : Ajout de l&#39;API Pattern Matching pour les switch.</li><li><strong>Écosystème</strong> : Adoption massive de Java 21 comme version LTS.</li><li><strong>Projet Loom</strong> : Introduction des fibres légères (lightweight threads) pour une meilleure gestion de la concurrence.</li></ul><p><strong>2024 : Java 23 (JDK 23)</strong></p><ul><li><strong>SDK</strong> : Améliorations continues de la performance et de la sécurité.</li><li><strong>API</strong> : Introduction de nouvelles fonctionnalités pour le traitement des données et l&#39;IA.</li><li><strong>Écosystème</strong> : Adoption croissante dans les domaines de l&#39;IA et du machine learning, avec un soutien accru pour les frameworks modernes.</li></ul><h2 id="installation" tabindex="-1"><a class="header-anchor" href="#installation"><span>Installation</span></a></h2><ol><li>Installer <a href="https://jdk.java.net/archive/" target="_blank" rel="noopener noreferrer">JDK</a></li><li>Ajouter le dossier BIN du JDK à la variable PATH <code>%JAVA_HOME%/bin</code>.</li></ol><p><img src="'+o+'" alt="path1"><img src="'+l+'" alt="path2"></p><ol start="3"><li>Compiler avec la commande <code>javac filename.java</code>.</li><li>Exécutez votre programme avec la commande <code>java nomdufichier</code>.</li></ol><h2 id="compilation" tabindex="-1"><a class="header-anchor" href="#compilation"><span>Compilation</span></a></h2><p><img src="'+i+`" alt="compilation"></p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token class-name">C</span><span class="token operator">:</span>\\<span class="token class-name">Users</span>\\user1<span class="token operator">&gt;</span>javac helloworld<span class="token punctuation">.</span>java</span>
<span class="line"><span class="token class-name">C</span><span class="token operator">:</span>\\<span class="token class-name">Users</span>\\user1<span class="token operator">&gt;</span>dir</span>
<span class="line">helloworld<span class="token punctuation">.</span><span class="token keyword">class</span></span>
<span class="line">helloworld<span class="token punctuation">.</span>java</span>
<span class="line"><span class="token class-name">C</span><span class="token operator">:</span>\\<span class="token class-name">Users</span>\\user1<span class="token operator">&gt;</span>java helloworld</span>
<span class="line"><span class="token class-name">Hello</span><span class="token punctuation">,</span> <span class="token class-name">World</span><span class="token operator">!</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="jvm" tabindex="-1"><a class="header-anchor" href="#jvm"><span>JVM</span></a></h2><p>La machine virtuelle Java (JVM) est l&#39;environnement d&#39;exécution du langage de programmation Java. Elle est responsable de l&#39;exécution du bytecode Java. La JVM est une machine virtuelle mise en œuvre dans le langage Java lui-même. Elle permet l&#39;exécution de programmes Java sur un large éventail de plates-formes sans qu&#39;il soit nécessaire de disposer d&#39;un compilateur natif ou d&#39;une machine virtuelle distincte.</p><p><img src="`+p+'" alt="jvm"></p><h2 id="javase" tabindex="-1"><a class="header-anchor" href="#javase"><span>JavaSE</span></a></h2><p>Java SE est un ensemble d&#39;outils de développement de logiciels et de bibliothèques utilisés pour développer des applications pour la plate-forme Java. Il comprend le kit de développement Java (JDK), l&#39;environnement d&#39;exécution Java (JRE) et les API de l&#39;édition standard Java (SE).</p><p><img src="'+r+`" alt="java"></p><h2 id="documentation" tabindex="-1"><a class="header-anchor" href="#documentation"><span>Documentation</span></a></h2><p>La documentation Java vous permet de trouver des informations sur le langage de programmation Java, l&#39;API Java SE et l&#39;environnement Java SE. Vous pouvez explorer les classes, les méthodes et d&#39;autres éléments des API, ainsi que le JDK et le JRE.</p><ul><li><a href="https://devdocs.io/openjdk~21/" target="_blank" rel="noopener noreferrer">Java Documentation</a></li></ul><h2 id="les-types-primitifs" tabindex="-1"><a class="header-anchor" href="#les-types-primitifs"><span>Les types primitifs</span></a></h2><p>LE types primitifs sont les types de base des langages de programmation. Ils sont utilisés pour représenter des valeurs simples telles que des entiers, des flottants, des chaînes de caractères, des booléens, etc.</p><p>En java, les types primitifs sont les suivants :</p><ul><li><code>int</code> : représente un entier</li><li><code>double</code> : représente un nombre à virgule flottante</li><li><code>boolean</code> : représente un booléen</li><li><code>char</code> : représente un caractère</li><li><code>byte</code> : représente un octet</li><li><code>short</code> : représente un court</li><li><code>long</code> : représente un long</li><li><code>float</code> : représente un flottant</li></ul><p>Chacun des types simples possède un alter-ego objet disposant de méthodes de conversion identifiable grâce à sa majuscule Ex : le type primitif « float » a pour équivalent objet « Float ».</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">float</span> f <span class="token operator">=</span> <span class="token number">1.0f</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">Float</span> f2 <span class="token operator">=</span> f<span class="token punctuation">;</span></span>
<span class="line">f2<span class="token punctuation">.</span><span class="token function">intValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 1</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Une variable en java est par convention déclarée avec une minuscule.</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">int</span> exempleOfInt <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="initialisation-et-constantes" tabindex="-1"><a class="header-anchor" href="#initialisation-et-constantes"><span>Initialisation et constantes</span></a></h2><p>Pour déclarer une variable, il faut d&#39;abord la déclarer.</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Une variable peut être initialisée à une valeur par défaut.</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">int</span> b <span class="token operator">=</span> a<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>Une variable peut être initialisée à une valeur constante.</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">final</span> <span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">final</span> <span class="token keyword">int</span> b <span class="token operator">=</span> a<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="structures-de-controles" tabindex="-1"><a class="header-anchor" href="#structures-de-controles"><span>Structures de contrôles</span></a></h2><p>Les structures de contrôles permettent de contrôler l&#39;exécution d&#39;un programme.</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">if</span> <span class="token punctuation">(</span>a <span class="token operator">&gt;</span> b<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;a est plus grand que b&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;a est plus petit que b&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Les structures de contrôles peuvent être imbriquées.</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">if</span> <span class="token punctuation">(</span>a <span class="token operator">&gt;</span> b<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;a est plus grand que b&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>a <span class="token operator">&lt;</span> b<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;a est plus petit que b&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;a est égal à b&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="iterations" tabindex="-1"><a class="header-anchor" href="#iterations"><span>Itérations</span></a></h2><p>Les itérations permettent de parcourir un ensemble d&#39;éléments.</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Il est possible d&#39;utiliser une variable d&#39;itération dans une itération.</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token string">&quot; &quot;</span> <span class="token operator">+</span> j<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="tableaux" tabindex="-1"><a class="header-anchor" href="#tableaux"><span>Tableaux</span></a></h2><p>Les tableaux permettent de stocker un ensemble d&#39;éléments. Une tableau a une taille fixe.</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> a <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>On peut initialiser un tableau à partir d&#39;une liste d&#39;éléments.</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> a <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="📚-lectures-complementaires" tabindex="-1"><a class="header-anchor" href="#📚-lectures-complementaires"><span>📚 Lectures complémentaires</span></a></h2><ul><li><a href="https://speakerdeck.com/mickaelbaron/programmation-orientee-objet-application-au-langage-java" target="_blank" rel="noopener noreferrer">Slides de cours de Mickael BARON</a></li></ul>`,74)]))}const v=s(c,[["render",u],["__file","index.html.vue"]]),k=JSON.parse('{"path":"/basics/","title":"Fondamentaux JAVA","lang":"en-US","frontmatter":{"description":"Fondamentaux JAVA Historique 1995 : Java 1.0 SDK : Introduction du Java Development Kit (JDK) 1.0. Écosystème : Lancement de Java par Sun Microsystems, conçu pour être portable,...","head":[["meta",{"property":"og:url","content":"https://worldline.github.io/gbrah/learning-poo/learning-poo/basics/"}],["meta",{"property":"og:title","content":"Fondamentaux JAVA"}],["meta",{"property":"og:description","content":"Fondamentaux JAVA Historique 1995 : Java 1.0 SDK : Introduction du Java Development Kit (JDK) 1.0. Écosystème : Lancement de Java par Sun Microsystems, conçu pour être portable,..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-10-06T20:15:56.000Z"}],["meta",{"property":"article:modified_time","content":"2024-10-06T20:15:56.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Fondamentaux JAVA\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-10-06T20:15:56.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"Historique","slug":"historique","link":"#historique","children":[]},{"level":2,"title":"Installation","slug":"installation","link":"#installation","children":[]},{"level":2,"title":"Compilation","slug":"compilation","link":"#compilation","children":[]},{"level":2,"title":"JVM","slug":"jvm","link":"#jvm","children":[]},{"level":2,"title":"JavaSE","slug":"javase","link":"#javase","children":[]},{"level":2,"title":"Documentation","slug":"documentation","link":"#documentation","children":[]},{"level":2,"title":"Les types primitifs","slug":"les-types-primitifs","link":"#les-types-primitifs","children":[]},{"level":2,"title":"Initialisation et constantes","slug":"initialisation-et-constantes","link":"#initialisation-et-constantes","children":[]},{"level":2,"title":"Structures de contrôles","slug":"structures-de-controles","link":"#structures-de-controles","children":[]},{"level":2,"title":"Itérations","slug":"iterations","link":"#iterations","children":[]},{"level":2,"title":"Tableaux","slug":"tableaux","link":"#tableaux","children":[]},{"level":2,"title":"📚 Lectures complémentaires","slug":"📚-lectures-complementaires","link":"#📚-lectures-complementaires","children":[]}],"git":{"updatedTime":1728245756000,"contributors":[{"name":"Ibrahim Gharbi","email":"brah.gharbi@gmail.com","commits":5,"url":"https://github.com/Ibrahim Gharbi"}]},"filePathRelative":"basics/README.md","autoDesc":true}');export{v as comp,k as data};
